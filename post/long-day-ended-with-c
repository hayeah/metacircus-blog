{post
[timestamps 2010-04-08T00:00:00-07:00]
[title Long Day, Ended With C]
[categories hack]
{md {<POSTHERE
# Long Day, Ended With C

It's something of a wonder that after what seemed like a long day,
there's nothing I want to say. I guess the one remarkable thing that
happened today was I wrote a couple lines of C.

I often say that I am learning programming backward. I started with
Lisp, and from there worked through the _lesser_ languages. Now I am
coming to C. I have not used any of the standard industrial languages
in any seriousness. Which I think is just fine.

C is a special thing though. Maybe not to program in C. But it's
really a deep knowledge of C that allows a kind of spiritual commune
with Unix. The more and more higher-level we get, the more difficult
it is to pinpoint a problem that might occur, because there are just
too many layers of turtles.

I think that at the two extremes of the abstraction spectrum, we get
languages that empower us to do things that are not even
imaginable. Lisp is like meta-meta-meta-meta. Working with Lisp, the
instinct is to always go more meta. C, of course, is just
portable assembly.

Paradoxically, as I learn more C and Unix (they are One and The Same),
I find that it also has a sense of meta-ness to it, a meta-ness that
actually is quite similar to Lisp, despite how diametrically opposite
they are in philosophy.

Lisp is famous for its ability to express itself. A metacircular
interpreter is a Lisp interpreter written in Lisp to run itself. C
also has this kind of circularity. Knowing how C works, I can use C to
program itself. For both Lisp and C, nothing is hidden from me.

There's also a feeling of universalism. In Lisp all you have are
lists, and you can do anything you want with lists. In C, everything
are bytes, and you can do anything you want with bytes. Each
language's universalism, in turn, encourages a fundamentalism. So it's
easy for Lisp and C lovers to think, respectively, that everything
**SHOULD** be lists, or everything **SHOULD** be bytes.
POSTHERE>}}}